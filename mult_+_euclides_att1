#include <stdio.h>
#include <gmp.h>

void algoritmo_euclideano(mpz_t a, mpz_t b) {
    mpz_t r;
    mpz_init(r);
    while (mpz_cmp_ui(b, 0) != 0) {
        mpz_mod(r, a, b);
        mpz_set(a, b);
        mpz_set(b, r);
    }
    printf("El maximo comun divisor de p y q es: ");
    gmp_printf("%Zd\n", a);
    mpz_clear(r);
}
int main() {
    // Declarar variables de tipo mpz_t para números grandes
    mpz_t p, q, result, aux;

    // Inicializar las variables
    mpz_init(p);
    mpz_init(q);
    mpz_init(result);

    // Leer los números grandes desde el usuario
    printf("Introduce el primer número primo grande (p): ");
    gmp_scanf("%Zd", &p);

    printf("Introduce el segundo número primo grande (q): ");
    gmp_scanf("%Zd", &q);

    // Multiplicar los números grandes
    mpz_mul(result, p, q);

    // Mostrar el resultado
    printf("El resultado de p * q es: ");
    gmp_printf("%Zd\n", result);

    // Calcular el máximo común divisor de p y q
    algoritmo_euclideano(p, q);

    // Liberar la memoria usada por las variables
    mpz_clear(p);
    mpz_clear(q);
    mpz_clear(result);
    mpz_clear(aux);
    return 0;
}

